{"version":3,"sources":["webpack:///./src/app/services/benefit/benefit.service.ts","webpack:///./src/app/services/benefit/index.ts","webpack:///./src/app/views/benefits/add-benefit/add-benefit.component.html","webpack:///./src/app/views/benefits/add-benefit/add-benefit.component.scss","webpack:///./src/app/views/benefits/add-benefit/add-benefit.component.ts","webpack:///./src/app/views/benefits/benefits-list/benefits-list.component.html","webpack:///./src/app/views/benefits/benefits-list/benefits-list.component.scss","webpack:///./src/app/views/benefits/benefits-list/benefits-list.component.ts","webpack:///./src/app/views/benefits/benefits.component.html","webpack:///./src/app/views/benefits/benefits.component.scss","webpack:///./src/app/views/benefits/benefits.component.ts","webpack:///./src/app/views/benefits/benefits.module.ts","webpack:///./src/app/views/benefits/benefits.routing.ts"],"names":[],"mappings":"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","file":"benefits-benefits-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { API_URL } from '../../shared/config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BenefitService {\r\n\r\n  url = API_URL\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public addBenefit(data): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.url}/benefit/add.php`, data);\r\n  }\r\n  \r\n\r\n}\r\n","export * from './benefit.service'\r\n","module.exports = \"\\r\\n<div [@routerTransition]>\\r\\n    Benefits  <app-page-header [heading]=\\\"'Add Benefit'\\\" [icon]=\\\"'fa-plus'\\\" [menus]=\\\"menus\\\"></app-page-header>\\r\\n\\r\\n    <p-growl [(value)]=\\\"msgs\\\"></p-growl>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\\\">\\r\\n        <div class=\\\"card mb-3\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n          </div>\\r\\n          <div class=\\\"card-body table-responsive\\\">\\r\\n            <div class=\\\"col-lg-10 offset-1\\\">\\r\\n              <form role=\\\"form\\\">           \\r\\n                \\r\\n                <fieldset class=\\\"form-group\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <label class=\\\"col-md-2\\\"> Description:</label>\\r\\n                    <div class=\\\"input-group mb-3 col-md-6 \\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\r\\n                          <li class=\\\"fa fa-user\\\"></li>\\r\\n                        </span>\\r\\n                      </div>\\r\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"Description\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\"\\r\\n                        aria-label=\\\"Description\\\" aria-describedby=\\\"basic-addon1\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </fieldset>\\r\\n  \\r\\n            \\r\\n                <fieldset class=\\\"form-group\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <label class=\\\"col-md-2\\\">Amount:</label>\\r\\n                    <div class=\\\"input-group mb-3 col-md-6 \\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\r\\n                          <li class=\\\"fa fa-user\\\"></li>\\r\\n                        </span>\\r\\n                      </div>\\r\\n                      <input type=\\\"number\\\" [(ngModel)]=\\\"Amount\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\"\\r\\n                        aria-label=\\\"Amount\\\" aria-describedby=\\\"basic-addon1\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </fieldset>\\r\\n           \\r\\n                <div class=\\\"justify-content-center\\\">\\r\\n                  <a  class=\\\"btn rounded-btn\\\" (click)=\\\"add()\\\">Add Benefit</a> &nbsp;\\r\\n                  <a  class=\\\"btn rounded-btn\\\" [routerLink]=\\\"['/benefits']\\\">Abort</a>\\r\\n                </div>\\r\\n              </form>\\r\\n  \\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n    </div>\\r\\n  </div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from 'primeng/api';\r\nimport { MenuItem } from '../../../models';\r\nimport { Router } from '@angular/router';\r\nimport { BenefitService } from '../../../services/benefit';\r\n\r\n@Component({\r\n  selector: 'app-add-benefit',\r\n  templateUrl: './add-benefit.component.html',\r\n  styleUrls: ['./add-benefit.component.scss']\r\n})\r\nexport class AddBenefitComponent implements OnInit {\r\n\r\n  Amount: Number;\r\n  Description: string;\r\n  msgs: Message[] = [];\r\n  msg: string;\r\n  menus: Array<MenuItem>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private benefitService: BenefitService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.menus = [\r\n      { name: 'Dashboard', url: '/dashboard' },\r\n      { name: 'Benefits', url: '/benefits', icon: 'cubes' },\r\n    ];\r\n  }\r\n\r\n  showSuccess() {\r\n    this.msgs = [];\r\n    this.msgs.push({\r\n      severity: \"success\",\r\n      summary: \"Success Message\",\r\n      detail: \"Benefit Added Successfully\"\r\n    });\r\n  }\r\n  showError(msg) {\r\n    this.msgs = [];\r\n    this.msgs.push({\r\n      severity: \"warn\",\r\n      summary: \"Validation Message\",\r\n      detail: `${msg}`\r\n    });\r\n  }\r\n\r\n  add() {\r\n    this.msg = undefined;\r\n    if (!this.Amount) {\r\n      this.showError(\"Please fill in Required Fields\");\r\n      return false;\r\n    }\r\n    if (!this.Description) {\r\n      this.showError(\"Please fill in Required Fields\");\r\n      return false;\r\n    }\r\n\r\n    let data = {\r\n      Description: this.Description,\r\n      Amount: this.Amount\r\n    };\r\n\r\n    this.benefitService.addBenefit(data)\r\n      .subscribe(response => {\r\n        if (response == 1) {\r\n          this.showSuccess();\r\n          setTimeout(() => {\r\n            this.router.navigate([\"/benefits\"]);\r\n          }, 2000);\r\n        }\r\n        else {\r\n          this.showError(response);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  Policies  <app-page-header [heading]=\\\"'Benefits'\\\" [icon]=\\\"'fa-cubes'\\\" [menus]=\\\"menus\\\"></app-page-header>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\\\">\\r\\n    <div class=\\\"card mb-3\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <a class=\\\"btn rounded-btn\\\" [routerLink]=\\\"['/benefits/add']\\\">Add benefit </a>\\r\\n          </div>\\r\\n          <div class=\\\"input-group mb-3 col-md-6\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\r\\n                <li class=\\\"fa fa-search\\\"></li>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\"\\r\\n              aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon1\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-body table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered\\\" *ngIf=\\\" benefits$ | async as benefits\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Description</th>\\r\\n              <th>Amount </th>           \\r\\n             \\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of benefits | filter: searchText | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n              <td class=\\\"fo-{{item.StatusId}}\\\">{{item.Description}}</td>\\r\\n              <td>{{item.Amount}}</td>              \\r\\n              <td><button class=\\\"btn rounded-btn\\\" (click)=\\\"view(item)\\\" >View</button></td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <div class=\\\"justify-content-center\\\">\\r\\n          <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SelectService } from '../../../shared';\r\nimport { Benefit } from '../../../models/benefit/benefit';\r\nimport { MenuItem } from '../../../models/header/MenuItem';\r\n \r\n@Component({\r\n  selector: 'app-benefits-list',\r\n  templateUrl: './benefits-list.component.html',\r\n  styleUrls: ['./benefits-list.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class BenefitsListComponent implements OnInit {\r\n\r\n  benefits$ : Observable<Array<Benefit>>=this.selectService.select(`benefits`);\r\n  searchText:string;\r\n  p:any;\r\n  menus:Array<MenuItem>;\r\n  \r\n  constructor(private selectService:SelectService,private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    this.menus = [\r\n      {name:'Dashboard',url:'/dashboard'},\r\n    ];\r\n  }\r\n  \r\n}\r\n","module.exports = \"<p>\\n  benefits works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-benefits',\n  templateUrl: './benefits.component.html',\n  styleUrls: ['./benefits.component.scss']\n})\nexport class BenefitsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BenefitsRoutes, declarations } from './benefits.routing';\r\nimport { PageHeaderModule, PrimeNg } from '../../shared';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,BenefitsRoutes, FormsModule,Ng2SearchPipeModule, ...PrimeNg, NgxPaginationModule,\r\n    ReactiveFormsModule, PageHeaderModule,\r\n\r\n  ],\r\n  declarations: [...declarations]\r\n})\r\nexport class BenefitsModule { }\r\n","import { BenefitsListComponent } from './benefits-list/benefits-list.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { BenefitsComponent } from './benefits.component';\r\nimport { AddBenefitComponent } from './add-benefit/add-benefit.component';\r\n\r\nconst routes: Routes = [\r\n  { path:'', component:BenefitsListComponent },\r\n  { path:'add', component:AddBenefitComponent }\r\n];\r\n\r\nexport const declarations =[BenefitsComponent,BenefitsListComponent,AddBenefitComponent];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\n\r\nexport class BenefitsRoutes {\r\n\r\n}\r\n"],"sourceRoot":""}