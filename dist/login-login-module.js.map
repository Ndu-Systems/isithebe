{"version":3,"sources":["webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/services/appointment/appointment.service.ts","webpack:///./src/app/services/appointment/index.ts","webpack:///./src/app/services/index.ts","webpack:///./src/app/services/patient/index.ts","webpack:///./src/app/services/patient/patient.service.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {}\r\n","module.exports = \"<p-growl [(value)]=\\\"msgs\\\"></p-growl>\\r\\n<div class=\\\"login-page\\\" [@routerTransition]>\\r\\n    <div class=\\\"row justify-content-md-center\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <img src=\\\"assets/images/logo.png\\\" width=\\\"150px\\\" class=\\\"user-avatar\\\" />\\r\\n            <h1>Dok-Comm.io</h1>\\r\\n            <h3><small>patient management system</small></h3>\\r\\n            <form>\\r\\n                <div class=\\\"form-content\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\"  [(ngModel)]=\\\"Email\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"Email\\\" placeholder=\\\"Email\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"password\\\" [(ngModel)]=\\\"Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"Password\\\" placeholder=\\\"Password\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <a class=\\\"btn rounded-btn\\\"  (click)=\\\"onLoggedin()\\\"> Log in </a>\\r\\n                &nbsp;\\r\\n                <!-- <a class=\\\"btn rounded-btn\\\" [routerLink]=\\\"['/signup']\\\">Register</a> -->\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  display: block; }\\n\\n.login-page {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: auto;\\n  background: #222;\\n  text-align: center;\\n  color: #fff;\\n  padding: 3em; }\\n\\n.login-page .col-lg-4 {\\n    padding: 0; }\\n\\n.login-page .input-lg {\\n    height: 46px;\\n    padding: 10px 16px;\\n    font-size: 18px;\\n    line-height: 1.3333333;\\n    border-radius: 0; }\\n\\n.login-page .input-underline {\\n    background: 0 0;\\n    border: none;\\n    box-shadow: none;\\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\\n    color: #fff;\\n    border-radius: 0; }\\n\\n.login-page .input-underline:focus {\\n    border-bottom: 2px solid #fff;\\n    box-shadow: none; }\\n\\n.login-page .rounded-btn {\\n    border-radius: 50px;\\n    color: rgba(255, 255, 255, 0.8);\\n    background: #222;\\n    border: 2px solid rgba(255, 255, 255, 0.8);\\n    font-size: 18px;\\n    line-height: 40px;\\n    padding: 0 25px; }\\n\\n.login-page .rounded-btn:hover,\\n  .login-page .rounded-btn:focus,\\n  .login-page .rounded-btn:active,\\n  .login-page .rounded-btn:visited {\\n    color: white;\\n    border: 2px solid white;\\n    outline: none; }\\n\\n.login-page h1 {\\n    font-weight: 300;\\n    margin-top: 20px;\\n    margin-bottom: 10px;\\n    font-size: 36px; }\\n\\n.login-page h1 small {\\n      color: rgba(255, 255, 255, 0.7); }\\n\\n.login-page .form-group {\\n    padding: 8px 0; }\\n\\n.login-page .form-group input::-webkit-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input:-moz-placeholder {\\n      /* Firefox 18- */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input::-moz-placeholder {\\n      /* Firefox 19+ */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input:-ms-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-content {\\n    padding: 40px 0; }\\n\\n.login-page .user-avatar {\\n    border-radius: 50%;\\n    border: 2px solid #fff; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { routerTransition } from '../router.animations';\r\nimport { Message } from 'primeng/api';\r\nimport { AccountService } from '../services';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    animations: [routerTransition()]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    Email : any = \"doc@mail.com\"\r\n    Password : any =\"pass\"\r\n    msgs: Message[] = [];\r\n\r\n    constructor( \r\n       private router: Router,\r\n        private accountService : AccountService\r\n    ) {}\r\n    showSuccess() {\r\n        this.msgs = [];\r\n        this.msgs.push({ severity: 'success', summary: 'Success Message', detail: 'Successfully Verified' });\r\n      }\r\n      showError(msg) {\r\n        this.msgs = [];\r\n        this.msgs.push({ severity: 'warn', summary: 'Validation Message', detail: `${msg}` });\r\n      }\r\n    ngOnInit() {\r\n      localStorage.clear();\r\n    }\r\n\r\n    onLoggedin() {\r\n        this.accountService.loginUser(this.Email,this.Password)\r\n        .subscribe((response) =>{\r\n          let user = response;                 \r\n            if(user.Email!== undefined){\r\n              this.showSuccess();\r\n              setTimeout(() => {            \r\n                localStorage.setItem('currentUser',JSON.stringify({username:user.Email,userid:user.UserId}));    \r\n                this.router.navigate(['/dashboard']);\r\n            \r\n              }, 2000);                           \r\n            }        \r\n          else{\r\n            this.showError(\"Email/Password is not verified\");\r\n          }\r\n        }); \r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AccountService } from '../services';\r\nimport { PrimeNg } from '../shared/primeng';\r\n\r\n@NgModule({\r\n    imports: [CommonModule,FormsModule,\r\n        ... PrimeNg,\r\n        ReactiveFormsModule, LoginRoutingModule],\r\n    declarations: [LoginComponent],\r\n    exports: [... PrimeNg],\r\n    providers: [AccountService]\r\n})\r\nexport class LoginModule {}\r\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Appointment, IAppointment } from '../../models';\r\nimport { API_URL } from '../../shared/config';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n  url: string = API_URL;\r\nconstructor(private http: HttpClient) { }\r\n\r\n  getAppointment(): Observable<Array<IAppointment>> {\r\n    return this.http.get<Array<IAppointment>>(`${this.url}/appointment/get-appointments.php`);\r\n  }\r\n\r\n  addAppointment(data): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/appointment/add-appointment.php`, data);\r\n  }\r\n\r\n  editAppointment(data): Observable<any>{\r\n    return this.http.post<any>(`${this.url}/appointment/edit-appointment.php`, data);\r\n\r\n  }\r\n\r\n}\r\n","export * from './appointment.service'\n","export * from './account/account.service'\r\nexport * from './patient'\r\nexport * from './appointment'\r\nexport * from './user'\r\n","export * from './patient.service'\r\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { API_URL } from '../../shared/config';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientService {\r\n\r\n  url: string = API_URL;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addPatient(data): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/patient/add-patient.php`, data);\r\n  }\r\n\r\n  updatePatient(data): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/patient/edit-patient.php`, data);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}