{"version":3,"sources":["webpack:///./src/app/services/benefit/benefit.service.ts","webpack:///./src/app/services/benefit/index.ts","webpack:///./src/app/views/benefits/add-benefit/add-benefit.component.html","webpack:///./src/app/views/benefits/add-benefit/add-benefit.component.ts","webpack:///./src/app/views/benefits/benefits-list/benefits-list.component.html","webpack:///./src/app/views/benefits/benefits-list/benefits-list.component.ts","webpack:///./src/app/views/benefits/benefits.component.ts","webpack:///./src/app/views/benefits/benefits.module.ts","webpack:///./src/app/views/benefits/benefits.routing.ts","webpack:///./src/app/views/benefits/edit-benefit/edit-benefit.component.html","webpack:///./src/app/views/benefits/edit-benefit/edit-benefit.component.ts","webpack:///./src/app/views/benefits/edit-benefit/index.ts"],"names":[],"mappings":"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","file":"benefits-benefits-module-ngfactory.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { API_URL } from '../../shared/config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BenefitService {\r\n\r\n  url = API_URL\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public addBenefit(data): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.url}/benefit/add.php`, data);\r\n  }\r\n  public editBenefit(data): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.url}/benefit/edit.php`, data);\r\n  }\r\n  \r\n\r\n}\r\n","export * from './benefit.service'\r\n","\r\n<div [@routerTransition]>\r\n   <app-page-header [heading]=\"'Add Benefit'\" [icon]=\"'fa-plus'\" [menus]=\"menus\"></app-page-header>\r\n\r\n    <p-growl [(value)]=\"msgs\"></p-growl>\r\n    <div class=\"row\">\r\n      <div class=\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-header\">\r\n          </div>\r\n          <div class=\"card-body table-responsive\">\r\n            <div class=\"col-lg-10 offset-1\">\r\n              <form role=\"form\">           \r\n                \r\n                <fieldset class=\"form-group\">\r\n                  <div class=\"row\">\r\n                    <label class=\"col-md-2\"> Description:</label>\r\n                    <div class=\"input-group mb-3 col-md-6 \">\r\n                      <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                          <li class=\"fa fa-clipboard\"></li>\r\n                        </span>\r\n                      </div>\r\n                      <input type=\"text\" [(ngModel)]=\"Description\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Description\"\r\n                        aria-label=\"Description\" aria-describedby=\"basic-addon1\">\r\n                    </div>\r\n                  </div>\r\n                </fieldset>\r\n  \r\n            \r\n                <fieldset class=\"form-group\">\r\n                  <div class=\"row\">\r\n                    <label class=\"col-md-2\">Amount:</label>\r\n                    <div class=\"input-group mb-3 col-md-6 \">\r\n                      <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                          <li class=\"fa fa-dollar\"></li>\r\n                        </span>\r\n                      </div>\r\n                      <input type=\"number\" [(ngModel)]=\"Amount\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Amount\"\r\n                        aria-label=\"Amount\" aria-describedby=\"basic-addon1\">\r\n                    </div>\r\n                  </div>\r\n                </fieldset>\r\n           \r\n                <div class=\"justify-content-center\">\r\n                  <a  class=\"btn rounded-btn\" (click)=\"add()\">Add Benefit</a> &nbsp;\r\n                  <a  class=\"btn rounded-btn\" [routerLink]=\"['/benefits']\">Abort</a>\r\n                </div>\r\n              </form>\r\n  \r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from 'primeng/api';\r\nimport { MenuItem } from '../../../models';\r\nimport { Router } from '@angular/router';\r\nimport { BenefitService } from '../../../services/benefit';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { loadScreen, stopLoadingScreen } from '../../../shared/config';\r\n\r\n@Component({\r\n  selector: 'app-add-benefit',\r\n  templateUrl: './add-benefit.component.html',\r\n  styleUrls: ['./add-benefit.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class AddBenefitComponent implements OnInit {\r\n\r\n  Amount: Number;\r\n  Description: string;\r\n  msgs: Message[] = [];\r\n  msg: string;\r\n  menus: Array<MenuItem>;\r\n  currentUser;\r\n  constructor(\r\n    private router: Router,\r\n    private benefitService: BenefitService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.menus = [\r\n      { name: 'Dashboard', url: '/dashboard' },\r\n      { name: 'Benefits', url: '/benefits', icon: 'heart' },\r\n    ];\r\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  }\r\n\r\n  showSuccess() {\r\n    this.msgs = [];\r\n    this.msgs.push({\r\n      severity: \"success\",\r\n      summary: \"Success Message\",\r\n      detail: \"Benefit Added Successfully\"\r\n    });\r\n  }\r\n  showError(msg) {\r\n    this.msgs = [];\r\n    this.msgs.push({\r\n      severity: \"warn\",\r\n      summary: \"Validation Message\",\r\n      detail: `${msg}`\r\n    });\r\n  }\r\n\r\n  add() {\r\n    this.msg = undefined;\r\n    if (!this.Amount) {\r\n      this.showError(\"Please fill in Required Fields\");\r\n      return false;\r\n    }\r\n    if (!this.Description) {\r\n      this.showError(\"Please fill in Required Fields\");\r\n      return false;\r\n    }\r\n\r\n    let data = {\r\n      Description: this.Description,\r\n      Amount: this.Amount,\r\n      CreateUserId: this.currentUser.userid\r\n    };\r\nloadScreen();\r\n    this.benefitService.addBenefit(data)\r\n      .subscribe(response => {\r\n        stopLoadingScreen();\r\n        if (response == 1) {\r\n          this.showSuccess();\r\n          setTimeout(() => {\r\n            this.router.navigate([\"/benefits\"]);\r\n          }, 2000);\r\n        }\r\n        else {\r\n          this.showError(response);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","<div [@routerTransition]>\r\n <app-page-header [heading]=\"'Benefits'\" [icon]=\"'fa-heart'\" [menus]=\"menus\"></app-page-header>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n    <div class=\"card mb-3\">\r\n      <div class=\"card-header\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <a class=\"btn rounded-btn\" [routerLink]=\"['/benefits/add']\">Add benefit </a>\r\n          </div>\r\n          <div class=\"input-group mb-3 col-md-6\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                <li class=\"fa fa-search\"></li>\r\n              </span>\r\n            </div>\r\n            <input type=\"text\" [(ngModel)]=\"searchText\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Search...\"\r\n              aria-label=\"Search\" aria-describedby=\"basic-addon1\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body table-responsive\">\r\n        <table class=\"table table-bordered\" *ngIf=\" benefits$ | async as benefits; else loading\">\r\n          <thead>\r\n            <tr>\r\n              <th>Description</th>\r\n              <th>Amount </th>           \r\n             \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let item of benefits | filter: searchText | paginate: { itemsPerPage: 10, currentPage: p }\">\r\n              <td class=\"fo-{{item.StatusId}}\">{{item.Description}}</td>\r\n              <td>{{item.Amount}}</td>              \r\n              <td><button class=\"btn rounded-btn\" (click)=\"edit(item)\" >Edit</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <ng-template #loading>\r\n          <app-spinner></app-spinner>\r\n        </ng-template>\r\n        <div class=\"justify-content-center\">\r\n          <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SelectService } from '../../../shared';\r\nimport { Benefit } from '../../../models/benefit/benefit';\r\nimport { MenuItem } from '../../../models/header/MenuItem';\r\n \r\n@Component({\r\n  selector: 'app-benefits-list',\r\n  templateUrl: './benefits-list.component.html',\r\n  styleUrls: ['./benefits-list.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class BenefitsListComponent implements OnInit {\r\n\r\n  benefits$ : Observable<Array<Benefit>>=this.selectService.select(`benefits`);\r\n  searchText:string;\r\n  p:any;\r\n  menus:Array<MenuItem>;\r\n  \r\n  constructor(private selectService:SelectService,private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    this.menus = [\r\n      {name:'Dashboard',url:'/dashboard'},\r\n    ];\r\n  }\r\n\r\n  edit(benefit:Benefit){\r\n    this.router.navigate(['/benefits/edit', benefit.BenefitId]);\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-benefits',\r\n  templateUrl: './benefits.component.html',\r\n  styleUrls: ['./benefits.component.scss']\r\n})\r\nexport class BenefitsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BenefitsRoutes, declarations } from './benefits.routing';\r\nimport { PageHeaderModule, PrimeNg, SpinnerModule } from '../../shared';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,BenefitsRoutes,SpinnerModule, FormsModule,Ng2SearchPipeModule, ...PrimeNg, NgxPaginationModule,\r\n    ReactiveFormsModule, PageHeaderModule,\r\n\r\n  ],\r\n  declarations: [...declarations],\r\n  providers:[ConfirmationService]\r\n})\r\nexport class BenefitsModule { }\r\n","import { BenefitsListComponent } from './benefits-list/benefits-list.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { BenefitsComponent } from './benefits.component';\r\nimport { AddBenefitComponent } from './add-benefit/add-benefit.component';\r\nimport { EditBenefitComponent } from './edit-benefit';\r\n\r\nconst routes: Routes = [\r\n  { path:'', component:BenefitsListComponent },\r\n  { path:'add', component:AddBenefitComponent },\r\n  { path:'edit/:id', component:EditBenefitComponent },\r\n];\r\n\r\nexport const declarations =[BenefitsComponent,EditBenefitComponent,BenefitsListComponent,AddBenefitComponent];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\n\r\nexport class BenefitsRoutes {\r\n\r\n}\r\n","\r\n<div [@routerTransition]>\r\n  <app-page-header [heading]=\"'Edit Benefit'\" [icon]=\"'fa-edit'\" [menus]=\"menus\"></app-page-header>\r\n\r\n  <p-growl [(value)]=\"msgs\"></p-growl>\r\n  <p-confirmDialog header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\" width=\"425\"></p-confirmDialog>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n      <div class=\"card mb-3\">\r\n        <div class=\"card-header\">\r\n        </div>\r\n        <div class=\"card-body table-responsive\">\r\n          <div class=\"col-lg-10 offset-1\">\r\n            <form role=\"form\"  *ngIf=\"benefit$ | async as benefit\">           \r\n              \r\n              <fieldset class=\"form-group\">\r\n                <div class=\"row\">\r\n                  <label class=\"col-md-2\"> Description:</label>\r\n                  <div class=\"input-group mb-3 col-md-6 \">\r\n                    <div class=\"input-group-prepend\">\r\n                      <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                        <li class=\"fa fa-clipboard\"></li>\r\n                      </span>\r\n                    </div>\r\n                    <input type=\"text\" [(ngModel)]=\"benefit[0].Description\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Description\"\r\n                      aria-label=\"Description\" aria-describedby=\"basic-addon1\">\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n\r\n          \r\n              <fieldset class=\"form-group\">\r\n                <div class=\"row\">\r\n                  <label class=\"col-md-2\">Amount:</label>\r\n                  <div class=\"input-group mb-3 col-md-6 \">\r\n                    <div class=\"input-group-prepend\">\r\n                      <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                        <li class=\"fa fa-dollar\"></li>\r\n                      </span>\r\n                    </div>\r\n                    <input type=\"number\" [(ngModel)]=\"benefit[0].Amount\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Amount\"\r\n                      aria-label=\"Amount\" aria-describedby=\"basic-addon1\">\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n         \r\n              <div class=\"justify-content-center\">\r\n                <a  class=\"btn rounded-btn\" (click)=\"edit(benefit[0])\">Update Benefit</a> &nbsp;\r\n                <a  class=\"btn rounded-btn\" [routerLink]=\"['/benefits']\">Abort</a>\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { BenefitService } from './../../../services/benefit/benefit.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Benefit, MenuItem } from '../../../models';\r\nimport { SelectService } from '../../../shared';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Message, ConfirmationService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-edit-benefit',\r\n  templateUrl: './edit-benefit.component.html',\r\n  styleUrls: ['./edit-benefit.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class EditBenefitComponent implements OnInit {\r\n  benefit$ : Observable<Benefit>;\r\n  benefitId : string;\r\n  menus: MenuItem[];\r\n  msgs: Message[] = [];\r\n  msg: string;\r\n  currentUser;\r\n  constructor(\r\n    private selectService: SelectService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private benefitService: BenefitService,\r\n    private confirmationService: ConfirmationService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.menus = [\r\n      { name: 'Dashboard', url: '/dashboard' },\r\n      { name: 'Benefits', url: '/benefits' },\r\n    ];\r\n    this.benefitId = this.route.snapshot.paramMap.get(\"id\");\r\n    this.benefit$ = this.selectService.select(`benefits WHERE BenefitId = '${this.benefitId}'`);\r\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  }\r\n  showSuccess() {\r\n    this.msgs = [];\r\n    this.msgs.push({\r\n      severity: \"success\",\r\n      summary: \"Success Message\",\r\n      detail: \"Benefit Updated Successfully\"\r\n    });\r\n  }\r\n  showError(msg) {\r\n    this.msgs = [];\r\n    this.msgs.push({\r\n      severity: \"warn\",\r\n      summary: \"Validation Message\",\r\n      detail: `${msg}`\r\n    });\r\n  } \r\n\r\n  edit(benefit){\r\n\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n        this.msg = undefined;\r\n        if (!benefit.Amount) {\r\n            this.showError(\"Please fill in Required Fields\");\r\n            return false;\r\n        }\r\n        if (!benefit.Description) {\r\n            this.showError(\"Please fill in Required Fields\");\r\n            return false;\r\n        }      \r\n  \r\n        let data = {\r\n          Description: benefit.Description,\r\n          Amount: benefit.Amount,\r\n          BenefitId: benefit.BenefitId,\r\n          ModifyUserId: this.currentUser.userid,      \r\n          StatusId:benefit.StatusId\r\n        };\r\n  \r\n        this.benefitService.editBenefit(data).subscribe(response => {\r\n          if (response === 1) {\r\n              this.showSuccess();\r\n              setTimeout(() => {\r\n                  this.router.navigate([\"/benefits\"]);\r\n              }, 2000);\r\n          }\r\n          if (response === \"500\") {\r\n              this.showError(\"Policy alreay exists\");\r\n          }\r\n      });\r\n        \r\n      }\r\n  });\r\n  }\r\n}\r\n","export * from './edit-benefit.component'\r\n"],"sourceRoot":""}