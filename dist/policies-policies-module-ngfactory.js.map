{"version":3,"sources":["webpack:///./src/app/services/policy/policy.service.ts","webpack:///./src/app/views/policies/add-benefity-to-policy/add-benefity-to-policy.component.html","webpack:///./src/app/views/policies/add-benefity-to-policy/add-benefity-to-policy.component.ts","webpack:///./src/app/views/policies/add-policy/add-policy.component.html","webpack:///./src/app/views/policies/add-policy/add-policy.component.ts","webpack:///./src/app/views/policies/add-policy/index.ts","webpack:///./src/app/views/policies/edit-policy/edit-policy.component.html","webpack:///./src/app/views/policies/edit-policy/edit-policy.component.ts","webpack:///./src/app/views/policies/edit-policy/index.ts","webpack:///./src/app/views/policies/list-policies/list-policies.component.html","webpack:///./src/app/views/policies/list-policies/list-policies.component.ts","webpack:///./src/app/views/policies/policies.component.ts","webpack:///./src/app/views/policies/policies.module.ts","webpack:///./src/app/views/policies/policies.routing.ts","webpack:///./src/app/views/policies/view-policy/view-policy.component.html","webpack:///./src/app/views/policies/view-policy/view-policy.component.ts"],"names":[],"mappings":"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","file":"policies-policies-module-ngfactory.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { API_URL } from '../../shared/config';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IPolicyBenefit } from '../../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PolicyService {\r\n\r\n  url: string = API_URL;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addPolicy(data): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/policy/add-policy.php`, data);\r\n  }\r\n  editPolicy(data): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/policy/edit-policy.php`, data);\r\n  }\r\n  addBenefitToApolicy(data:IPolicyBenefit): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/policy/add-benefits-to-policy.php`, data);\r\n  }\r\n\r\n\r\n}\r\n","<p-growl [(value)]=\"msgs\"></p-growl>\r\n<p-confirmDialog header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\" width=\"425\"></p-confirmDialog>\r\n\r\n<div class=\"row\" [@routerTransition]>\r\n    <app-page-header [heading]=\"'Add Benefit to a  policy'\" [icon]=\"'fa-plus'\" [menus]=\"menus\"></app-page-header>\r\n\r\n    <div class=\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n      <div class=\"card mb-3\">\r\n      \r\n        <div class=\"card-header\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                  Select Benefit for {{policy.Description}}\r\n              </div>\r\n              <div class=\"input-group mb-3 col-md-6\">\r\n                <div class=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                    <li class=\"fa fa-search\"></li>\r\n                  </span>\r\n                </div>\r\n                <input type=\"text\" [(ngModel)]=\"searchText\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Search...\"\r\n                  aria-label=\"Search\" aria-describedby=\"basic-addon1\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        <div class=\"card-body table-responsive\">\r\n          <div class=\"col-lg-10 offset-1\">\r\n           \r\n            <div class=\"card-body table-responsive\" *ngIf=\"benefits$ | async as benefits; else loadingBenefits\">\r\n               \r\n                \r\n                <table class=\"table table-bordered\" *ngIf=\"benefits?.length; else nobefits\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Amount </th>\r\n                            <th>Description</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of benefits | filter: searchText | paginate: { itemsPerPage: 10, currentPage: p }\">\r\n                            <td>{{item.Amount |currency:'R':true}}</td>\r\n                            <td class=\"fo-{{item.StatusId}}\">{{item.Description}}</td>\r\n                            <td><button class=\"btn rounded-btn\" (click)=\"add(item)\">Add</button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <ng-template #nobefits>\r\n                  <div>\r\n                  \r\n                    <div class=\"alert alert-warning\">\r\n                     No Policy found for {{client.FirstName}}\r\n                    </div>\r\n                  </div>\r\n                </ng-template>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>","import { Benefit } from './../../../models/benefit/benefit';\r\nimport { PolicyService } from './../../../services/policy/policy.service';\r\nimport { Policy, IPolicyBenefit } from './../../../models/policy/policy';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { MenuItem } from '../../../models';\r\nimport { Observable } from 'rxjs';\r\nimport { Message, ConfirmationService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { SelectService } from '../../../shared';\r\nimport { SELECTED_POLICY, POLICY_BENEFIT_HOLDER_EXIST, CURRENT_LOGGED_IN_USER, loadScreen, stopLoadingScreen } from '../../../shared/config';\r\n\r\n@Component({\r\n  selector: 'app-add-benefity-to-policy',\r\n  templateUrl: './add-benefity-to-policy.component.html',\r\n  styleUrls: ['./add-benefity-to-policy.component.scss'],\r\n  animations: [routerTransition()]\r\n\r\n})\r\nexport class AddBenefityToPolicyComponent implements OnInit {\r\n  policy:Policy;\r\n  menus:Array<MenuItem>;\r\n  benefits$:Observable<Array<any>>;\r\n  msgs: Message[] = [];\r\n  msg: string;\r\n  searchText: string;\r\n  p: any;\r\n  loadingBenefits:any;\r\n  loggedinUser: any;\r\n  constructor(\r\n    private router:Router,\r\n    private selectService : SelectService,\r\n    private confirmationService: ConfirmationService,\r\n    private policyService:PolicyService\r\n  ) {\r\n    let policy = localStorage.getItem(SELECTED_POLICY);\r\n\r\n      if(!policy) this.router.navigate(['clients']);\r\n\r\n      this.policy = JSON.parse(policy);\r\n        // user \r\n        let currentUser = localStorage.getItem(CURRENT_LOGGED_IN_USER);\r\n        if(!currentUser) this.router.navigate(['login']);\r\n        this.loggedinUser =JSON.parse(currentUser);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.benefits$ = this.selectService.select(`benefits WHERE StatusId = 1`);\r\n\r\n    this.menus = [\r\n      {name:'Dashboard',url:'/dashboard'},\r\n      {name:'Policies',url:'/policies',icon:'file'},\r\n      {name:this.policy.Description,url:'/policies/view',icon:'user'},\r\n    ];\r\n  }\r\n  add(benefit:Benefit){\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n        let data: IPolicyBenefit ={\r\n          PolicyId: this.policy.PolicyId ,\r\n          BenefitId:benefit.BenefitId,\r\n          CreateUserId:this.loggedinUser.userid,\r\n          StatusId:1\r\n        }\r\n     loadScreen();\r\n        this.policyService.addBenefitToApolicy(data)\r\n        .subscribe(response=>{\r\n          stopLoadingScreen();\r\n          if (response === 1) {\r\n            this.showSuccess();\r\n            setTimeout(() => {\r\n                this.router.navigate([\"/policies/view\"]);\r\n            }, 2000);\r\n        }\r\n        if (response === POLICY_BENEFIT_HOLDER_EXIST) {\r\n            this.showError(\"Benefit  holder alreay exists for this policy\");\r\n        }\r\n        })\r\n        \r\n      }\r\n  });\r\n  }\r\n\r\n  showSuccess() {\r\n    this.msgs = [];\r\n    this.msgs.push({\r\n        severity: \"success\",\r\n        summary: \"Success Message\",\r\n        detail: \"Policy Holder Added Successfully\"\r\n    });\r\n}\r\nshowError(msg) {\r\n    this.msgs = [];\r\n    this.msgs.push({\r\n        severity: \"warn\",\r\n        summary: \"Validation Message\",\r\n        detail: `${msg}`\r\n    });\r\n}\r\n}\r\n","\r\n<div [@routerTransition]>\r\n    Policies  <app-page-header [heading]=\"'Add Policy'\" [icon]=\"'fa-plus'\" [menus]=\"menus\"></app-page-header>\r\n\r\n    <p-growl [(value)]=\"msgs\"></p-growl>\r\n    <div class=\"row\">\r\n      <div class=\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-header\">\r\n          </div>\r\n          <div class=\"card-body table-responsive\">\r\n            <div class=\"col-lg-10 offset-1\">\r\n              <form role=\"form\">           \r\n                \r\n                <fieldset class=\"form-group\">\r\n                  <div class=\"row\">\r\n                    <label class=\"col-md-2\"> Description:</label>\r\n                    <div class=\"input-group mb-3 col-md-6 \">\r\n                      <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                          <li class=\"fa fa-clipboard\"></li>\r\n                        </span>\r\n                      </div>\r\n                      <input type=\"text\" [(ngModel)]=\"Description\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Description\"\r\n                        aria-label=\"Description\" aria-describedby=\"basic-addon1\">\r\n                    </div>\r\n                  </div>\r\n                </fieldset>\r\n  \r\n                <!-- Surname -->\r\n                <fieldset class=\"form-group\">\r\n                  <div class=\"row\">\r\n                    <label class=\"col-md-2\">Amount:</label>\r\n                    <div class=\"input-group mb-3 col-md-6 \">\r\n                      <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                          <li class=\"fa fa-dollar\"></li>\r\n                        </span>\r\n                      </div>\r\n                      <input type=\"number\" [(ngModel)]=\"Amount\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Amount\"\r\n                        aria-label=\"Amount\" aria-describedby=\"basic-addon1\">\r\n                    </div>\r\n                  </div>\r\n                </fieldset>\r\n           \r\n                <div class=\"justify-content-center\">\r\n                  <a  class=\"btn rounded-btn\" (click)=\"add()\">Add Policy</a> &nbsp;\r\n                  <a  class=\"btn rounded-btn\" [routerLink]=\"['/policies']\">Abort</a>\r\n                </div>\r\n              </form>\r\n  \r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n    </div>\r\n  </div>","import { PolicyService } from './../../../services/policy/policy.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Message } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItem } from '../../../models/header/MenuItem';\r\nimport { loadScreen, stopLoadingScreen } from '../../../shared/config';\r\n\r\n@Component({\r\n  selector: 'app-add-policy',\r\n  templateUrl: './add-policy.component.html',\r\n  styleUrls: ['./add-policy.component.scss'],\r\n  animations: [routerTransition()]\r\n\r\n})\r\nexport class AddPolicyComponent implements OnInit {\r\n\r\n  Amount: number;\r\n  Description: string;\r\n  CreateUserId:number = 1;\r\n  msgs: Message[] = [];\r\n  msg: string;\r\n  menus:Array<MenuItem>;\r\n  currentUser;\r\n  constructor(\r\n      private router: Router,\r\n      private policyService: PolicyService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.menus = [\r\n        {name:'Dashboard',url:'/dashboard'},\r\n        {name:'Policies',url:'/policies',icon:'file'},\r\n      ];\r\n      this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  }\r\n  showSuccess() {\r\n      this.msgs = [];\r\n      this.msgs.push({\r\n          severity: \"success\",\r\n          summary: \"Success Message\",\r\n          detail: \"Policy Added Successfully\"\r\n      });\r\n  }\r\n  showError(msg) {\r\n      this.msgs = [];\r\n      this.msgs.push({\r\n          severity: \"warn\",\r\n          summary: \"Validation Message\",\r\n          detail: `${msg}`\r\n      });\r\n  }\r\n  add() {\r\n      this.msg = undefined;\r\n      if (!this.Amount) {\r\n          this.showError(\"Please fill in Required Fields\");\r\n          return false;\r\n      }\r\n      if (!this.Description) {\r\n          this.showError(\"Please fill in Required Fields\");\r\n          return false;\r\n      }\r\n      \r\n\r\n      let data = {\r\n        Description: this.Description,\r\n          Amount: this.Amount,\r\n          CreateUserId:this.currentUser.userid\r\n      };\r\n      loadScreen();\r\n      this.policyService.addPolicy(data).subscribe(response => {\r\n          stopLoadingScreen();\r\n          if (response === 1) {\r\n              this.showSuccess();\r\n              setTimeout(() => {\r\n                  this.router.navigate([\"/policies\"]);\r\n              }, 2000);\r\n          }\r\n          if (response === \"500\") {\r\n              this.showError(\"Policy alreay exists\");\r\n          }\r\n      });\r\n  }\r\n\r\n}\r\n","export * from './add-policy.component'","\r\n<div [@routerTransition]>\r\n  <app-page-header [heading]=\"'Edit Policy'\" [icon]=\"'fa-edit'\" [menus]=\"menus\"></app-page-header>\r\n\r\n  <p-growl [(value)]=\"msgs\"></p-growl>\r\n  <p-confirmDialog header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\" width=\"425\"></p-confirmDialog>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n      <div class=\"card mb-3\">\r\n        <div class=\"card-header\">\r\n        </div>\r\n        <div class=\"card-body table-responsive\">\r\n          <div class=\"col-lg-10 offset-1\">\r\n            <form role=\"form\" *ngIf=\"policy$ | async as policy\">           \r\n              \r\n              <fieldset class=\"form-group\">\r\n                <div class=\"row\">\r\n                  <label class=\"col-md-2\"> Description:</label>\r\n                  <div class=\"input-group mb-3 col-md-6 \">\r\n                    <div class=\"input-group-prepend\">\r\n                      <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                        <li class=\"fa fa-clipboard\"></li>\r\n                      </span>\r\n                    </div>\r\n                    <input type=\"text\" [(ngModel)]=\"policy[0].Description\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Description\"\r\n                      aria-label=\"Description\" aria-describedby=\"basic-addon1\">\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n\r\n              <!-- Surname -->\r\n              <fieldset class=\"form-group\">\r\n                <div class=\"row\">\r\n                  <label class=\"col-md-2\">Amount:</label>\r\n                  <div class=\"input-group mb-3 col-md-6 \">\r\n                    <div class=\"input-group-prepend\">\r\n                      <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                        <li class=\"fa fa-dollar\"></li>\r\n                      </span>\r\n                    </div>\r\n                    <input type=\"number\" [(ngModel)]=\"policy[0].Amount\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Amount\"\r\n                      aria-label=\"Amount\" aria-describedby=\"basic-addon1\">\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n         \r\n              <div class=\"justify-content-center\">\r\n                <a  class=\"btn rounded-btn\" (click)=\"edit(policy[0])\">Update Policy</a> &nbsp;\r\n                <a  class=\"btn rounded-btn\" [routerLink]=\"['/policies']\">Abort</a>\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem, Policy } from '../../../models';\r\nimport { SelectService } from '../../../shared';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Message, ConfirmationService } from 'primeng/api';\r\nimport { PolicyService } from '../../../services/policy/policy.service';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { CURRENT_LOGGED_IN_USER } from '../../../shared/config';\r\n\r\n@Component({\r\n  selector: 'app-edit-policy',\r\n  templateUrl: './edit-policy.component.html',\r\n  styleUrls: ['./edit-policy.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class EditPolicyComponent implements OnInit {\r\n  menus: MenuItem[];\r\n  msg: string;\r\n  policyId: string;\r\n  policy$: Observable<Policy>;\r\n  msgs: Message[] = [];\r\n  currentUser;\r\n  constructor(\r\n    private selectService: SelectService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private policyService : PolicyService,\r\n    private confirmationService: ConfirmationService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.menus = [\r\n      { name: 'Dashboard', url: '/dashboard' },\r\n      { name: 'Policies', url: '/policies' },\r\n    ];\r\n    this.policyId = this.route.snapshot.paramMap.get(\"id\");\r\n    this.policy$ = this.selectService.select(`policies WHERE PolicyId = '${this.policyId}'`);\r\n    this.currentUser = JSON.parse(localStorage.getItem(CURRENT_LOGGED_IN_USER));\r\n  }\r\n\r\n  showSuccess() {\r\n    this.msgs = [];\r\n    this.msgs.push({\r\n      severity: \"success\",\r\n      summary: \"Success Message\",\r\n      detail: \"Policy Updated Successfully\"\r\n    });\r\n  }\r\n  showError(msg) {\r\n    this.msgs = [];\r\n    this.msgs.push({\r\n      severity: \"warn\",\r\n      summary: \"Validation Message\",\r\n      detail: `${msg}`\r\n    });\r\n  }\r\n\r\n  edit(policy){\r\n\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure that you want to perform this action?',\r\n      accept: () => {\r\n        this.msg = undefined;\r\n        if (!policy.Amount) {\r\n            this.showError(\"Please fill in Required Fields\");\r\n            return false;\r\n        }\r\n        if (!policy.Description) {\r\n            this.showError(\"Please fill in Required Fields\");\r\n            return false;\r\n        }\r\n        \r\n  \r\n        let data = {\r\n          Description: policy.Description,\r\n          Amount: policy.Amount,\r\n          PolicyId: policy.PolicyId,\r\n          ModifyUserId: this.currentUser.userid,\r\n          StatusId:policy.StatusId\r\n        };\r\n  \r\n        this.policyService.editPolicy(data).subscribe(response => {\r\n          if (response === 1) {\r\n              this.showSuccess();\r\n              setTimeout(() => {\r\n                  this.router.navigate([\"/policies\"]);\r\n              }, 2000);\r\n          }\r\n          if (response === \"500\") {\r\n              this.showError(\"Policy alreay exists\");\r\n          }\r\n      });\r\n        \r\n      }\r\n  });\r\n    \r\n  }\r\n}\r\n","export * from './edit-policy.component'","<div [@routerTransition]>\r\n    Policies  <app-page-header [heading]=\"'Policies'\" [icon]=\"'fa-file'\" [menus]=\"menus\"></app-page-header>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n      <div class=\"card mb-3\">\r\n        <div class=\"card-header\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <a class=\"btn rounded-btn\" [routerLink]=\"['/policies/add']\">Add policy </a>\r\n            </div>\r\n            <div class=\"input-group mb-3 col-md-6\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                  <li class=\"fa fa-search\"></li>\r\n                </span>\r\n              </div>\r\n              <input type=\"text\" [(ngModel)]=\"searchText\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Search...\"\r\n                aria-label=\"Search\" aria-describedby=\"basic-addon1\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body table-responsive\">\r\n          <table class=\"table table-bordered\" *ngIf=\"policies$ | async as policies; else loading\">\r\n            <thead>\r\n              <tr>\r\n                <th>Amount </th>\r\n                <th>Description</th>\r\n                <th>CreateDate</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let item of policies | filter: searchText | paginate: { itemsPerPage: 10, currentPage: p }\">\r\n                <td>{{item.Amount}}</td>\r\n                <td class=\"fo-{{item.StatusId}}\">{{item.Description}}</td>\r\n                <td>{{item.CreateDate}}</td>\r\n                <td><button class=\"btn rounded-btn\" (click)=\"view(item)\" >View</button>\r\n                    &nbsp;<button class=\"btn rounded-btn\" (click)=\"edit(item)\" >Edit</button></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <ng-template #loading>\r\n            <app-spinner></app-spinner>\r\n          </ng-template>\r\n          <div class=\"justify-content-center\">\r\n            <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Router } from '@angular/router';\r\nimport { SelectService } from './../../../shared/services/select.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Observable } from 'rxjs';\r\nimport { ACTIVE_POLICY_CODE, SELECTED_POLICY } from '../../../shared/config';\r\nimport { Policy } from '../../../models/policy/policy';\r\nimport { MenuItem } from '../../../models/header/MenuItem';\r\n\r\n@Component({\r\n  selector: 'app-list-policies',\r\n  templateUrl: './list-policies.component.html',\r\n  styleUrls: ['./list-policies.component.scss'],\r\n  animations: [routerTransition()]\r\n\r\n})\r\nexport class ListPoliciesComponent implements OnInit {\r\npolicies$:Observable<Array<Policy>>=this.selectService.select(`policies`);\r\nsearchText:string;\r\np:any;\r\nmenus:Array<MenuItem>;\r\n\r\n  constructor(private selectService:SelectService,private router:Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.menus = [\r\n      {name:'Dashboard',url:'/dashboard'},\r\n    ];\r\n  }\r\n  view(item:Policy){\r\n    localStorage.setItem(SELECTED_POLICY,JSON.stringify(item))\r\n    this.router.navigate([`policies/view`])\r\n  }\r\n  edit(policy:Policy){\r\n    this.router.navigate(['/policies/edit', policy.PolicyId]);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-policies',\r\n  templateUrl: './policies.component.html',\r\n  styleUrls: ['./policies.component.scss'],\r\n\r\n})\r\nexport class PoliciesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PoliciesRoutes, declarations } from './policies.routing';\r\nimport { PageHeaderModule, PrimeNg, SpinnerModule } from '../../shared';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,PoliciesRoutes,  FormsModule,Ng2SearchPipeModule, ...PrimeNg, NgxPaginationModule,\r\n    ReactiveFormsModule, PageHeaderModule,SpinnerModule\r\n\r\n  ],\r\n  declarations: [...declarations],\r\n  providers:[ConfirmationService],\r\n  \r\n\r\n})\r\nexport class PoliciesModule { }\r\n","import { AddBenefityToPolicyComponent } from './add-benefity-to-policy/add-benefity-to-policy.component';\r\nimport { PoliciesComponent } from './policies.component';\r\nimport { AddPolicyComponent } from './add-policy';\r\nimport { ListPoliciesComponent } from './list-policies/list-policies.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { ViewPolicyComponent } from './view-policy/view-policy.component';\r\nimport { EditPolicyComponent } from './edit-policy';\r\n\r\nconst routes: Routes = [\r\n  { path:'', component:ListPoliciesComponent },\r\n  { path:'add', component:AddPolicyComponent },\r\n  { path:'edit/:id', component:EditPolicyComponent },\r\n  { path:'view', component:ViewPolicyComponent },\r\n  { path:'add-benefits', component:AddBenefityToPolicyComponent },\r\n];\r\nexport const declarations =[PoliciesComponent,ListPoliciesComponent,EditPolicyComponent,AddPolicyComponent,ViewPolicyComponent,AddBenefityToPolicyComponent]\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class PoliciesRoutes{\r\n  \r\n}\r\n","<div [@routerTransition]>\r\n   <app-page-header [heading]=\"policy.Description\" [icon]=\"'fa'\" [menus]=\"menus\"></app-page-header>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                        {{policy.Description}} Details\r\n                </div>\r\n                <div class=\"card-body table-responsive\">\r\n                    <table class=\"table table-bordered\" *ngIf=\"policy\">\r\n\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <b>Description</b>\r\n                                </td>\r\n                                <td class=\"bold\">\r\n                                    {{policy.Description}}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <b>Amount</b>\r\n                                </td>\r\n                                <td class=\"bold\">\r\n                                    {{policy.Amount|currency:'R':true}}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <b>Status</b>\r\n                                </td>\r\n                                <td class=\"bold\">\r\n                                    {{policy.StatusId}}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n             \r\n                <div class=\"card-header\">\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <a class=\"btn rounded-btn\" (click)=\"addBefefits()\">Add benefit </a>\r\n                          </div>\r\n                          <div class=\"input-group mb-3 col-md-6\">\r\n                            <div class=\"input-group-prepend\">\r\n                              <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                <li class=\"fa fa-search\"></li>\r\n                              </span>\r\n                            </div>\r\n                            <input type=\"text\" [(ngModel)]=\"searchText\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Search...\"\r\n                              aria-label=\"Search\" aria-describedby=\"basic-addon1\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                <div class=\"card-body table-responsive\" *ngIf=\"benefits$ | async as benefits; else loading\">\r\n                 \r\n                    \r\n                    <table class=\"table table-bordered\" *ngIf=\"benefits?.length; else nobefits\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Amount </th>\r\n                                <th>Description</th>\r\n                                <th>CreateDate</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of benefits | filter: searchText | paginate: { itemsPerPage: 10, currentPage: p }\">\r\n                                <td>{{item.Amount |currency:'R':true}}</td>\r\n                                <td class=\"fo-{{item.StatusId}}\">{{item.Description}}</td>\r\n                                <td>{{item.CreateDate| date:'mediumDate'}}</td>\r\n                                <td><button class=\"btn rounded-btn\" (click)=\"viewBenefit(item)\">View</button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <ng-template #nobefits>\r\n                        <div>\r\n                        \r\n                          <div class=\"alert alert-warning\">\r\n                           No Benefits for this plan\r\n                          </div>\r\n                        </div>\r\n                      </ng-template>\r\n                </div>\r\n               \r\n                <ng-template #loading>\r\n                    <app-spinner></app-spinner>\r\n                  </ng-template>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n","import { Observable } from \"rxjs\";\r\nimport { Policy } from \"./../../../models/policy/policy\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { SELECTED_POLICY } from \"../../../shared/config\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SelectService } from \"../../../shared\";\r\nimport { routerTransition } from \"../../../router.animations\";\r\nimport { MenuItem } from \"../../../models/header/MenuItem\";\r\n\r\n@Component({\r\n    selector: \"app-view-policy\",\r\n    templateUrl: \"./view-policy.component.html\",\r\n    styleUrls: [\"./view-policy.component.scss\"],\r\n    animations: [routerTransition()]\r\n})\r\nexport class ViewPolicyComponent implements OnInit {\r\n    policy: Policy;\r\n    benefits$: Observable<any>;\r\n    menus:Array<MenuItem>;\r\n    nobefits: any;\r\n    searchText: string;\r\n    p:any;\r\n    constructor(private router: Router, private selectService: SelectService) {\r\n        let policy = localStorage.getItem(SELECTED_POLICY);\r\n\r\n        if (!policy) this.router.navigate([\"policies\"]);\r\n\r\n        this.policy = JSON.parse(policy);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.benefits$ = this.selectService.select(\r\n            `policybenefits right join  benefits on policybenefits.BenefitId = benefits.BenefitId where PolicyId = '${\r\n                this.policy.PolicyId\r\n            }'`\r\n        );\r\n\r\n        this.menus = [\r\n            {name:'Dashboard',url:'/dashboard'},\r\n            {name:'Policies',url:'/policies',icon:'file'},\r\n          ];\r\n    }\r\n    viewBenefit(item){\r\n      alert('Benefit details under contruction');\r\n    }\r\n    addBefefits(){\r\n        this.router.navigate(['policies/add-benefits'])\r\n    }\r\n}\r\n"],"sourceRoot":""}