{"version":3,"sources":["webpack:///./src/app/services/policy/policy.service.ts","webpack:///./src/app/views/policies/add-policy/add-policy.component.html","webpack:///./src/app/views/policies/add-policy/add-policy.component.scss","webpack:///./src/app/views/policies/add-policy/add-policy.component.ts","webpack:///./src/app/views/policies/add-policy/index.ts","webpack:///./src/app/views/policies/list-policies/list-policies.component.html","webpack:///./src/app/views/policies/list-policies/list-policies.component.scss","webpack:///./src/app/views/policies/list-policies/list-policies.component.ts","webpack:///./src/app/views/policies/policies.component.html","webpack:///./src/app/views/policies/policies.component.scss","webpack:///./src/app/views/policies/policies.component.ts","webpack:///./src/app/views/policies/policies.module.ts","webpack:///./src/app/views/policies/policies.routing.ts"],"names":[],"mappings":"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","file":"policies-policies-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { API_URL } from '../../shared/config';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PolicyService {\n\n  url: string = API_URL;\n  constructor(private http: HttpClient) { }\n\n  addPolicy(data): Observable<any> {\n    return this.http.post<any>(`${this.url}/policy/add-policy.php`, data);\n  }\n\n\n}\n","module.exports = \"\\n<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"'Add Policy'\\\" [icon]=\\\"'fa-user-plus'\\\"></app-page-header>\\n    <p-growl [(value)]=\\\"msgs\\\"></p-growl>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\\\">\\n        <div class=\\\"card mb-3\\\">\\n          <div class=\\\"card-header\\\">\\n          </div>\\n          <div class=\\\"card-body table-responsive\\\">\\n            <div class=\\\"col-lg-10 offset-1\\\">\\n              <form role=\\\"form\\\">           \\n                \\n                <fieldset class=\\\"form-group\\\">\\n                  <div class=\\\"row\\\">\\n                    <label class=\\\"col-md-2\\\"> Description:</label>\\n                    <div class=\\\"input-group mb-3 col-md-6 \\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                          <li class=\\\"fa fa-user\\\"></li>\\n                        </span>\\n                      </div>\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"Description\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\"\\n                        aria-label=\\\"Description\\\" aria-describedby=\\\"basic-addon1\\\">\\n                    </div>\\n                  </div>\\n                </fieldset>\\n  \\n                <!-- Surname -->\\n                <fieldset class=\\\"form-group\\\">\\n                  <div class=\\\"row\\\">\\n                    <label class=\\\"col-md-2\\\">Amount:</label>\\n                    <div class=\\\"input-group mb-3 col-md-6 \\\">\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                          <li class=\\\"fa fa-user\\\"></li>\\n                        </span>\\n                      </div>\\n                      <input type=\\\"number\\\" [(ngModel)]=\\\"Amount\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\"\\n                        aria-label=\\\"Amount\\\" aria-describedby=\\\"basic-addon1\\\">\\n                    </div>\\n                  </div>\\n                </fieldset>\\n           \\n                <div class=\\\"justify-content-center\\\">\\n                  <a  class=\\\"btn rounded-btn\\\" (click)=\\\"add()\\\">Add Policy</a> &nbsp;\\n                  <a  class=\\\"btn rounded-btn\\\" [routerLink]=\\\"['/clients']\\\">Abort</a>\\n                </div>\\n              </form>\\n  \\n            </div>\\n          </div>\\n        </div>\\n  \\n      </div>\\n  \\n    </div>\\n  </div>\"","module.exports = \"\"","import { PolicyService } from './../../../services/policy/policy.service';\nimport { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { Message } from 'primeng/api';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-policy',\n  templateUrl: './add-policy.component.html',\n  styleUrls: ['./add-policy.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class AddPolicyComponent implements OnInit {\n\n  Amount: number;\n  Description: string;\n  CreateUserId:number =1;\n  msgs: Message[] = [];\n  msg: string;\n  constructor(\n      private router: Router,\n      private policyService: PolicyService\n  ) {}\n\n  ngOnInit() {}\n  showSuccess() {\n      this.msgs = [];\n      this.msgs.push({\n          severity: \"success\",\n          summary: \"Success Message\",\n          detail: \"Policy Added Successfully\"\n      });\n  }\n  showError(msg) {\n      this.msgs = [];\n      this.msgs.push({\n          severity: \"warn\",\n          summary: \"Validation Message\",\n          detail: `${msg}`\n      });\n  }\n  add() {\n      this.msg = undefined;\n      if (!this.Amount) {\n          this.showError(\"Please fill in Required Fields\");\n          return false;\n      }\n      if (!this.Description) {\n          this.showError(\"Please fill in Required Fields\");\n          return false;\n      }\n      \n\n      let data = {\n        Description: this.Description,\n          Amount: this.Amount,\n          CreateUserId:this.CreateUserId\n      };\n      this.policyService.addPolicy(data).subscribe(response => {\n          if (response === 1) {\n              this.showSuccess();\n              setTimeout(() => {\n                  this.router.navigate([\"/policies\"]);\n              }, 2000);\n          }\n          if (response === \"500\") {\n              this.showError(\"Policy alreay exists\");\n          }\n      });\n  }\n\n}\n","export * from './add-policy.component'","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [heading]=\\\"'Policies'\\\" [icon]=\\\"'fa-users'\\\"></app-page-header>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-xl-12 col-lg-12 col-md-12 col-sm-12\\\">\\n      <div class=\\\"card mb-3\\\">\\n        <div class=\\\"card-header\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <a class=\\\"btn rounded-btn\\\" [routerLink]=\\\"['/policies/add']\\\">Add policy </a>\\n            </div>\\n            <div class=\\\"input-group mb-3 col-md-6\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                  <li class=\\\"fa fa-search\\\"></li>\\n                </span>\\n              </div>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\"\\n                aria-label=\\\"Search\\\" aria-describedby=\\\"basic-addon1\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body table-responsive\\\">\\n          <table class=\\\"table table-bordered\\\" *ngIf=\\\"policies$ | async as policies\\\">\\n            <thead>\\n              <tr>\\n                <th>Amount </th>\\n                <th>Description</th>\\n                <th>CreateDate</th>\\n                \\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of policies | filter: searchText | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\n                <td>{{item.Amount}}</td>\\n                <td class=\\\"fo-{{item.StatusId}}\\\">{{item.Description}}</td>\\n                <td>{{item.CreateDate}}</td>\\n                <td><a class=\\\"btn rounded-btn\\\" [routerLink]=\\\"['/policies/view']\\\" (click)=\\\"view(item)\\\" >View</a></td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <div class=\\\"justify-content-center\\\">\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\"","module.exports = \".fo-1 {\\n  color: green; }\\n\\n.fo-2 {\\n  color: red; }\\n\"","import { SelectService } from './../../../shared/services/select.service';\nimport { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { Observable } from 'rxjs';\nimport { ACTIVE_POLICY_CODE } from '../../../shared/config';\n\n@Component({\n  selector: 'app-list-policies',\n  templateUrl: './list-policies.component.html',\n  styleUrls: ['./list-policies.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class ListPoliciesComponent implements OnInit {\npolicies$:Observable<any>=this.selectService.select(`policies`);\n  constructor(private selectService:SelectService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<main class=\\\"container-fluid\\\">\\n  <router-outlet></router-outlet>\\n</main> \\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-policies',\n  templateUrl: './policies.component.html',\n  styleUrls: ['./policies.component.scss'],\n\n})\nexport class PoliciesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PoliciesRoutes, declarations } from './policies.routing';\nimport { PageHeaderModule, PrimeNg } from '../../shared';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n@NgModule({\n  imports: [\n    CommonModule,PoliciesRoutes,  FormsModule,Ng2SearchPipeModule, ...PrimeNg, NgxPaginationModule,\n    ReactiveFormsModule, PageHeaderModule,\n\n  ],\n  declarations: [...declarations]\n})\nexport class PoliciesModule { }\n","import { PoliciesComponent } from './policies.component';\nimport { AddPolicyComponent } from './add-policy';\nimport { ListPoliciesComponent } from './list-policies/list-policies.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [\n  { path:'', component:ListPoliciesComponent },\n  { path:'add', component:AddPolicyComponent },\n];\nexport const declarations =[PoliciesComponent,ListPoliciesComponent,AddPolicyComponent]\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class PoliciesRoutes{\n  \n}\n"],"sourceRoot":""}