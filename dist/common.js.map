{"version":3,"sources":["webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/alert/alert.d.ts.NgbAlert.html","webpack:///./src/app/services/account/account.service.ts","webpack:///./src/app/services/account/index.ts","webpack:///./src/app/services/callback/call-back.service.ts","webpack:///./src/app/services/callback/index.ts","webpack:///./src/app/services/client/client.service.ts","webpack:///./src/app/services/index.ts","webpack:///./src/app/services/user/index.ts","webpack:///./src/app/services/user/user.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["\n    <div [class]=\"'alert alert-' + type + (dismissible ? ' alert-dismissible' : '')\" role=\"alert\">\n      <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n        (click)=\"closeHandler()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <ng-content></ng-content>\n    </div>\n    ","import { Injectable } from '@angular/core';\r\nimport { API_URL } from '../../shared/config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n\r\n  url = API_URL\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public loginUser(Email: String, Password: String): Observable<any> {\r\n    return this.httpClient.get<any>(`${this.url}/account/SignIn.php?Email=${Email}&Password=${Password}`);\r\n  }\r\n  public changePassword(data): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.url}/account/PasswordReset.php`, data);\r\n  }\r\n\r\n  forgotPassword(email:string):Observable<any>{\r\n    return this.httpClient.get<any>(`${this.url}/account/ForgotEmail.php?Email=${email}`);\r\n}\r\n}\r\n","export * from './account.service'","import { Injectable } from '@angular/core'; \r\nimport { API_URL } from '../../shared/config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CallBackService {\r\n\r\n  url = API_URL\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public logCallBack(data): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.url}/callback/add.php`, data);\r\n  }\r\n  public editCallBack(data): Observable<any> {\r\n    return this.httpClient.post<any>(`${this.url}/callback/edit.php`, data);\r\n  }\r\n}\r\n","export * from './call-back.service'","import { Injectable } from '@angular/core';\r\nimport { API_URL } from '../../shared/config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IPolicyholder } from '../../models/policyholder/policyholder';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n  url: string = API_URL;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addClient(data): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/client/add-client.php`, data);\r\n  }\r\n\r\n  updateClient(data): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/client/edit-client.php`, data);\r\n  }\r\n\r\n  // policy holder\r\n  addPolicyHolder(data:IPolicyholder): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/client/add-policyholder.php`, data);\r\n  }\r\n  addBeneficiary(data:any): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/client/add-beneficiary.php`, data);\r\n  }\r\n  updateBeneficiary(data): Observable<any> {\r\n    return this.http.post<any>(`${this.url}/client/edit-beneficiary.php`, data);\r\n  }\r\n  getPolicies():Observable<any>{\r\n    return this.http.get<any>(`${this.url}/client/get-policies.php`);\r\n}\r\n\r\n  getPoliciesAndBens(UserId:string):Observable<any>{\r\n    return this.http.get<any>(`${this.url}/client/get-policies-and-beneficiaries.php?UserId=${UserId}`);\r\n}\r\n\r\n}\r\n","export * from './account'\r\nexport * from './user'\r\nexport * from './callback'","export * from './user.service'","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { API_URL } from '../../shared/config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  url = API_URL\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  \r\n\r\n}\r\n"],"sourceRoot":""}